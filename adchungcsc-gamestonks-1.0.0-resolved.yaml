---
openapi: 3.0.0
info:
  title: API for interacting with GameStonks
  description: |
    GameStonks API
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: https://github.com/adchungcsc/GameStonks
servers:
- url: https://virtserver.swaggerhub.com/adchungcsc/gamestonks/1.0.0
  description: SwaggerHub API Auto Mocking
tags:
- name: data
  description: Data about stocks
- name: stock
  description: Stocks
paths:
  /data/finance/{stock_ticker}:
    get:
      tags:
      - data
      summary: Gets stock finance performance data
      description: Gets stock finance performance data
      operationId: getStockFinancialPerformance
      parameters:
      - name: stock_ticker
        in: path
        description: ID of stock that needs to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
        "404":
          description: not found
  /data/votes_trend/{stock_ticker}:
    get:
      tags:
      - data
      summary: Gets votes per day trend from a stock
      description: Gets votes per day trend from a stock
      operationId: getStockVotesPerDayPerformance
      parameters:
      - name: stock_ticker
        in: path
        description: ID of stock that needs to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: since
        in: query
        description: starting date to get stocks from.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: until
        in: query
        description: end date to get stocks from.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: successful operation
        "404":
          description: not found
  /data/comments_trend/{stock_ticker}:
    get:
      tags:
      - data
      summary: Gets stock comments per day trend
      description: Gets stock comments per day trend
      operationId: getStockCommentPerformance
      parameters:
      - name: stock_ticker
        in: path
        description: ID of stock that needs to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: since
        in: query
        description: starting date to get stocks from.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: until
        in: query
        description: end date to get stocks from.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: successful operation
        "404":
          description: not found
  /data/comments_words/{stock_ticker}:
    get:
      tags:
      - data
      summary: Get most used words in comments for a given stock
      description: Get most used words in comments for a given stock
      operationId: getStockCommentMostUsedWordsAndFrequency
      parameters:
      - name: stock_ticker
        in: path
        description: ID of stock that needs to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
        "404":
          description: not found
  /data/most_voted:
    get:
      tags:
      - data
      summary: Gets all stocks on the platform within a date range
      description: Gets all stocks on the platform within a date range
      operationId: getMostVoted
      parameters:
      - name: vote_floor
        in: query
        description: floor of votes count to find.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: since
        in: query
        description: starting date to get stocks from.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: until
        in: query
        description: end date to get stocks from.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: successful operation
        "404":
          description: not found
  /stocks:
    get:
      tags:
      - stock
      summary: Gets all stocks on the platform within a date range
      description: Gets all stocks on the platform within a date range
      operationId: getAllStocks
      parameters:
      - name: since
        in: query
        description: starting date to get stocks from.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: until
        in: query
        description: end date to get stocks from.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: successful operation
        "400":
          description: unsuccessful operation
  /stock/{stock_ticker}:
    get:
      tags:
      - stock
      summary: Returns a stock's vote count and comments
      description: Returns a stock's vote count and comments
      operationId: getIndividualStock
      parameters:
      - name: stock_ticker
        in: path
        description: ID of stock that needs to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32
        "404":
          description: not found
    post:
      tags:
      - stock
      summary: Create a new stock ticker for tracking
      description: Create a new stock ticker for tracking
      operationId: insertIndividualStock
      parameters:
      - name: stock_ticker
        in: path
        description: ID of stock that needs to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: successful operation
        "400":
          description: failure
  /stock/vote/{stock_ticker}:
    put:
      tags:
      - stock
      summary: Add a vote to a stock
      description: Add a vote to a stock
      operationId: addNewVote
      parameters:
      - name: stock_ticker
        in: path
        description: ID of stock that needs to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: successful operation
        "404":
          description: not found
  /stock/comment/{stock_ticker}:
    put:
      tags:
      - stock
      summary: Add a comment to a stock
      description: Add a comment to a stock
      operationId: addNewComment
      parameters:
      - name: stock_ticker
        in: path
        description: ID of stock that needs to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: successful operation
        "404":
          description: ticker not found
components: {}
